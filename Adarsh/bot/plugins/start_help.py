#Adarsh goel
from Adarsh.bot import StreamBot
from Adarsh.vars import Var
import logging
logger = logging.getLogger(__name__)
from Adarsh.bot.plugins.stream import MY_PASS
from Adarsh.utils.human_readable import humanbytes
from Adarsh.utils.database import Database
from pyrogram import filters
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from pyrogram.errors import UserNotParticipant
from Adarsh.utils.file_properties import get_name, get_hash, get_media_file_size
db = Database(Var.DATABASE_URL, Var.name)
from pyrogram.types import ReplyKeyboardMarkup

                      
@StreamBot.on_message(filters.command('start') & filters.private)
async def start(b, m):
    if not await db.is_user_exist(m.from_user.id):
        await db.add_user(m.from_user.id)
        await b.send_message(
            Var.BIN_CHANNEL,
            f"#NEW_USER: \n\nNew User [{m.from_user.first_name}](tg://user?id={m.from_user.id}) Started !!"
        )
    usr_cmd = m.text.split("_")[-1]
    if usr_cmd == "/start":
        await m.reply_photo(
            photo="https://graph.org/file/99d7274c81e5f43feea90.jpg",
            caption="** ú·¥á ü ü·¥è...‚ö°\n\n…™·¥Ä·¥ç ·¥Ä s…™·¥ç·¥ò ü·¥á ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç “ì…™ ü·¥á/·¥†…™·¥Ö·¥á·¥è ·¥õ·¥è ·¥ò·¥á Ä·¥ç·¥Ä…¥·¥á…¥·¥õ  ü…™…¥·¥ã ·¥Ä…¥·¥Ö s·¥õ Ä·¥á·¥Ä·¥ç  ü…™…¥·¥ã …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥è Ä  ô·¥è·¥õ.**\n\n**·¥ús·¥á /help “ì·¥è Ä ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õs…™ üs\n\ns·¥á…¥·¥Ö ·¥ç·¥á ·¥Ä…¥ è ·¥†…™·¥Ö·¥á·¥è / “ì…™ ü·¥á ·¥õ·¥è s·¥á·¥á ·¥ç è ·¥ò·¥è·¥°·¥á Ä·¥¢...**",
            reply_markup=InlineKeyboardMarkup(
                [
                    [InlineKeyboardButton("‚ö° UPDATES ‚ö°", url="https://t.me/+YzxA0sElhW41MDBl"), InlineKeyboardButton("‚ö° SUPPORT ‚ö°", url="https://t.me/DiscussGroupProblam")]
                    # [InlineKeyboardButton("üçø MOVIE UPDATES", url="https://t.me/+1BrWGkFZqsgxNDM1"), InlineKeyboardButton("üí† DEVELOPER", url="https://t.me/TechnoJay_bot")]
                    
                ]
            ),
            
        )
    else:

        get_msg = await b.get_messages(chat_id=Var.BIN_CHANNEL, ids=int(usr_cmd))

        file_size = None
        if get_msg.video:
            file_size = f"{humanbytes(get_msg.video.file_size)}"
        elif get_msg.document:
            file_size = f"{humanbytes(get_msg.document.file_size)}"
        elif get_msg.audio:
            file_size = f"{humanbytes(get_msg.audio.file_size)}"

        file_name = None
        if get_msg.video:
            file_name = f"{get_msg.video.file_name}"
        elif get_msg.document:
            file_name = f"{get_msg.document.file_name}"
        elif get_msg.audio:
            file_name = f"{get_msg.audio.file_name}"

        stream_link = "https://{}/{}".format(Var.FQDN, get_msg.id) if Var.ON_HEROKU or Var.NO_PORT else \
            "http://{}:{}/{}".format(Var.FQDN,
                                     Var.PORT,
                                     get_msg.id)

        msg_text = "**·¥õ·¥è·¥ú Ä  ü…™…¥·¥ã …™s …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á·¥Ö...‚ö°\n\nüìß “ì…™ ü·¥á …¥·¥Ä·¥ç·¥á :-\n{}\n {}\n\nüíå ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö  ü…™…¥·¥ã :- {}\n\n‚ôªÔ∏è THIS LINK WILL EXPIRE IN 1 DAY ‚ôªÔ∏è\n\n<b>‚ùñ M·¥Ä…™…¥·¥õ·¥Ä…™…¥ B è @JRBotz ‚ùñ</b>**"
        await m.reply_text(            
            text=msg_text.format(file_name, file_size, stream_link),
            
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚ö° ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö …¥·¥è·¥° ‚ö°", url=stream_link)]])
        )


@StreamBot.on_message(filters.command('help') & filters.private)
async def help_handler(bot, message):
    if not await db.is_user_exist(message.from_user.id):
        await db.add_user(message.from_user.id)
        await bot.send_message(
            Var.BIN_CHANNEL,
            f"#NEW_USER: \n\nNew User [{message.from_user.first_name}](tg://user?id={message.from_user.id}) Started !!"
        )
              
    await message.reply_photo(
            photo="https://graph.org/file/99d7274c81e5f43feea90.jpg",
            caption="**‚î£‚™º s·¥á…¥·¥Ö ·¥ç·¥á ·¥Ä…¥ è “ì…™ ü·¥á/·¥†…™·¥Ö·¥á·¥è ·¥õ ú·¥á…¥ …™ ·¥°…™ ü ü  è·¥è·¥ú ·¥ò·¥á Ä·¥ç·¥Ä…¥·¥á…¥·¥õ s ú·¥Ä Ä·¥á·¥Ä ô ü·¥á  ü…™…¥·¥ã ·¥è“ì …™·¥õ...\n\n‚î£‚™º ·¥õ ú…™s  ü…™…¥·¥ã ·¥Ñ·¥Ä…¥  ô·¥á ·¥ús·¥á·¥Ö ·¥õ·¥è ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö ·¥è Ä ·¥õ·¥è s·¥õ Ä·¥á·¥Ä·¥ç ·¥ús…™…¥…¢ ·¥áx·¥õ·¥á Ä…¥·¥Ä ü ·¥†…™·¥Ö·¥á·¥è ·¥ò ü·¥Ä è·¥á Äs ·¥õ ú Ä·¥è·¥ú…¢ ú ·¥ç è s·¥á Ä·¥†·¥á Äs.\n\n‚î£‚™º “ì·¥è Ä s·¥õ Ä·¥á·¥Ä·¥ç…™…¥…¢ ·¥ä·¥ús·¥õ ·¥Ñ·¥è·¥ò è ·¥õ ú·¥á  ü…™…¥·¥ã ·¥Ä…¥·¥Ö ·¥ò·¥Äs·¥õ·¥á …™·¥õ …™…¥  è·¥è·¥ú Ä ·¥†…™·¥Ö·¥á·¥è ·¥ò ü·¥Ä è·¥á Ä ·¥õ·¥è s·¥õ·¥Ä Ä·¥õ s·¥õ Ä·¥á·¥Ä·¥ç…™…¥…¢.\n\n‚î£‚™º ·¥õ ú…™s  ô·¥è·¥õ …™s ·¥Ä üs·¥è s·¥ú·¥ò·¥ò·¥è Ä·¥õ …™…¥ ·¥Ñ ú·¥Ä…¥…¥·¥á ü. ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥Äs ·¥Ä·¥Ö·¥ç…™…¥ ·¥õ·¥è …¢·¥á·¥õ  Ä·¥á·¥Ä ü·¥õ…™·¥ç·¥á ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö  ü…™…¥·¥ã “ì·¥è Ä ·¥á·¥†·¥á Ä è “ì…™ ü·¥ás/·¥†…™·¥Ö·¥á·¥ès ·¥ò·¥ès è../\n\n‚î£‚™º “ì·¥è Ä ·¥ç·¥è Ä·¥á …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥ :- /about\n\n\n·¥ò ü·¥á·¥Äs·¥á s ú·¥Ä Ä·¥á ·¥Ä…¥·¥Ö s·¥ú ôs·¥Ñ Ä…™ ô·¥á**", 
  
        
        reply_markup=InlineKeyboardMarkup(
                [
                    [InlineKeyboardButton("‚ö° UPDATES ‚ö°", url="https://t.me/+YzxA0sElhW41MDBl"), InlineKeyboardButton("‚ö° SUPPORT ‚ö°", url="https://t.me/DiscussGroupProblam")]
                    # [InlineKeyboardButton("üçø MOVIE UPDATES", url="https://t.me/+1BrWGkFZqsgxNDM1"), InlineKeyboardButton("üí† DEVELOPER", url="https://t.me/TechnoJay_bot")]
                    
                ]
            ),
            
        )

@StreamBot.on_message(filters.command('ban') & filters.user(Var.OWNER_ID))
async def do_ban(bot ,  message):
    userid = message.text.split(" ", 2)[1] if len(message.text.split(" ", 1)) > 1 else None
    reason = message.text.split(" ", 2)[2] if len(message.text.split(" ", 2)) > 2 else None
    if not userid:
        return await message.reply('<b>·¥ò ü·¥á·¥Äs·¥á ·¥Ä·¥Ö·¥Ö ·¥Ä ·¥†·¥Ä ü…™·¥Ö ·¥ús·¥á Ä/·¥Ñ ú·¥Ä…¥…¥·¥á ü …™·¥Ö ·¥°…™·¥õ ú ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö\n\n·¥áx : /ban (user/channel_id) (banning reason[Optional]) \n Ä·¥á·¥Ä ü ·¥áx : <code>/ban 1234567899</code>\n·¥°…™·¥õ ú  Ä·¥á·¥Äs·¥è…¥ ·¥áx:<code>/ban 1234567899 seding adult links to bot</code>\n·¥õ·¥è  ô·¥Ä…¥ ·¥Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü :\n<code>/ban CHANEL_ID</code>\n·¥áx : <code>/ban -1001234567899</code></b>')
    text = await message.reply("<b> ü·¥á·¥õ ·¥ç·¥á ·¥Ñ ú·¥á·¥Ñ·¥ã üëÄ</b>")
    banSts = await db.ban_user(userid)
    if banSts == True:
        await text.edit(
    text=f"<b><code>{userid}</code>  ú·¥Äs  ô·¥á·¥á…¥  ô·¥Ä…¥…¥·¥á·¥Ö s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è\n\nS ú·¥è·¥ú ü·¥Ö I s·¥á…¥·¥Ö ·¥Ä…¥ ·¥Ä ü·¥á Ä·¥õ ·¥õ·¥è ·¥õ ú·¥á  ô·¥Ä…¥…¥·¥á·¥Ö ·¥ús·¥á Ä?</b>",
    reply_markup=InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(" è·¥ás ‚úÖ", callback_data=f"sendAlert_{userid}_{reason if reason else 'no reason provided'}"),
                InlineKeyboardButton("…¥·¥è ‚ùå", callback_data=f"noAlert_{userid}"),
            ],
        ]
    ),
)
    else:
        await text.edit(f"<b>C·¥è…¥·¥õ Ä·¥è ü ü  è·¥è·¥ú Ä ·¥Ä…¥…¢·¥á Ä  ô Ä·¥è...\n<code>{userid}</code> …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è  ô·¥Ä…¥…¥·¥á·¥Ö !!</b>")
    return


@StreamBot.on_message(filters.command('unban') & filters.user(Var.OWNER_ID))
async def do_unban(bot ,  message):
    userid = message.text.split(" ", 2)[1] if len(message.text.split(" ", 1)) > 1 else None
    if not userid:
        return await message.reply('…¢…™·¥†·¥á ·¥ç·¥á ·¥Ä…¥ …™·¥Ö\n·¥áx : <code>/unban 1234567899<code>')
    text = await message.reply("<b> ü·¥á·¥õ ·¥ç·¥á ·¥Ñ ú·¥á·¥Ñ·¥ã ü•±</b>")
    unban_chk = await db.is_unbanned(userid)
    if  unban_chk == True:
        await text.edit(text=f'<b><code>{userid}</code> …™s ·¥ú…¥ ô·¥Ä…¥…¥·¥á·¥Ö\nS ú·¥è·¥ú ü·¥Ö I s·¥á…¥·¥Ö ·¥õ ú·¥á  ú·¥Ä·¥ò·¥ò è …¥·¥á·¥°s ·¥Ä ü·¥á Ä·¥õ ·¥õ·¥è ·¥õ ú·¥á ·¥ú…¥ ô·¥Ä…¥…¥·¥á·¥Ö ·¥ús·¥á Ä?</b>',
        reply_markup=InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(" è·¥ás ‚úÖ", callback_data=f"sendUnbanAlert_{userid}"),
                InlineKeyboardButton("…¥·¥è ‚ùå", callback_data=f"NoUnbanAlert_{userid}"),
            ],
        ]
    ),
)

    elif unban_chk==False:
        await text.edit('<b>·¥ús·¥á Ä …™s …¥·¥è·¥õ  ô·¥Ä…¥…¥·¥á·¥Ö  è·¥á·¥õ.</b>')
    else :
        await text.edit(f"<b>“ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è ·¥ú…¥ ô·¥Ä…¥ ·¥ús·¥á Ä/·¥Ñ ú·¥Ä…¥…¥·¥á ü.\n Ä·¥á·¥Äs·¥è…¥ : {unban_chk}</b>")


@StreamBot.on_callback_query()
async def cb_handler(client, query):
    data = query.data
    if data == "close_data":
        await query.message.delete()

@StreamBot.on_message(filters.command('about') & filters.private)
async def about_handler(bot, message):
    if not await db.is_user_exist(message.from_user.id):
        await db.add_user(message.from_user.id)
        await bot.send_message(
            Var.BIN_CHANNEL,
            f"#NEW_USER: \n\nNew User [{message.from_user.first_name}](tg://user?id={message.from_user.id}) Started !!"
        )
    await message.reply_photo(
            photo="https://graph.org/file/99d7274c81e5f43feea90.jpg",
            caption="""<b>s·¥è·¥ç·¥á  ú…™·¥Ö·¥Ö·¥á…¥ ·¥Ö·¥á·¥õ·¥Ä…™ üsüòú</b>

<b>‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ„Äî“ì…™ ü·¥á ·¥õ·¥è  ü…™…¥·¥ã  ô·¥è·¥õ„Äï</b>
‚îÉ
‚î£‚™º<b> ô·¥è·¥õ …¥·¥Ä·¥ç·¥á : “ì…™ ü·¥á ·¥õ·¥è  ü…™…¥·¥ã
‚î£‚™º<b>·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á·¥¢ : <a href='https://t.me/+YzxA0sElhW41MDBl'>Join Channel</a></b>
‚î£‚™º<b>s·¥á Ä·¥†·¥á Ä :  ú·¥á Ä·¥ú·¥ã·¥è</b>
‚î£‚™º<b> ü…™ ô Ä·¥Ä Ä è : ·¥ò è Ä·¥è…¢ Ä·¥Ä·¥ç</b>
‚î£‚™º<b> ü·¥Ä…¥…¢·¥ú·¥Ä…¢·¥á: ·¥ò è·¥õ ú·¥è…¥ 3</b>
‚îÉ
<b>‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ„Äî·¥ò ü·¥á·¥Äs Ä s·¥ú·¥ò·¥ò·¥è Ä·¥õ„Äï</b>""",
  
        
        reply_markup=InlineKeyboardMarkup(
                [
                    [InlineKeyboardButton("‚ö° UPDATES ‚ö°", url="https://t.me/+YzxA0sElhW41MDBl"), InlineKeyboardButton("‚ö° SUPPORT ‚ö°", url="https://t.me/DiscussGroupProblam")]
                    # [InlineKeyboardButton("üçø MOVIE UPDATES", url="https://t.me/+1BrWGkFZqsgxNDM1"), InlineKeyboardButton("üí† DEVELOPER", url="https://t.me/TechnoJay_bot")]
                    
                ]
            ),
            
        )

    elif data.startswith("sendAlert"):
        user_id =(data.split("_")[1])
        user_id = int(user_id.replace(' ' , ''))
        if len(str(user_id)) == 10:
            reason = str(data.split("_")[2])
            try:
                await client.send_message(user_id , f'<b> è·¥è·¥ú ·¥Ä Ä·¥á  ô·¥Ä…¥…¥·¥á·¥Ö  ô è ·¥Ä·¥Ö·¥ç…™…¥.\nR·¥á·¥Äs·¥è…¥ : {reason}</b>')
                await query.message.edit(f"<b>A ü·¥á Ä·¥õ s·¥á…¥·¥õ ·¥õ·¥è <code>{user_id}</code>\nR·¥á·¥Äs·¥è…¥ : {reason}</b>")
            except Exception as e:
                await query.message.edit(f"<b>s Ä è …™ …¢·¥è·¥õ ·¥õ ú…™s ·¥á Ä Ä·¥è Ä : {e}</b>")
        else:
            await query.message.edit(f"<b>T ú·¥á ·¥ò Ä·¥è·¥Ñ·¥áss ·¥°·¥Äs …¥·¥è·¥õ ·¥Ñ·¥è·¥ç·¥ò ü·¥á·¥õ·¥á·¥Ö  ô·¥á·¥Ñ·¥Ä·¥ús·¥á ·¥õ ú·¥á ·¥ús·¥á Ä …™·¥Ö ·¥°·¥Äs …¥·¥è·¥õ ·¥†·¥Ä ü…™·¥Ö, ·¥è Ä ·¥ò·¥á Ä ú·¥Ä·¥òs …™·¥õ ·¥°·¥Äs ·¥Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü …™·¥Ö</b>")

    elif data.startswith('noAlert'):
        user_id =(data.split("_")[1])
        user_id = int(user_id.replace(' ' , ''))
        await query.message.edit(f"<b>T ú·¥á  ô·¥Ä…¥ ·¥è…¥ <code>{user_id}</code> ·¥°·¥Äs ·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á·¥Ö s…™ ü·¥á…¥·¥õ ü è.</b>")

    elif data.startswith('sendUnbanAlert'):
        user_id =(data.split("_")[1])
        user_id = int(user_id.replace(' ' , ''))
        if len(str(user_id)) == 10:
            try:
                unban_text = '<b> ú·¥ú Ä Ä·¥Ä è.. è·¥è·¥ú ·¥Ä Ä·¥á ·¥ú…¥ ô·¥Ä…¥…¥·¥á·¥Ö  ô è ·¥Ä·¥Ö·¥ç…™…¥.</b>'
                await client.send_message(user_id , unban_text)
                await query.message.edit(f"<b>U…¥ ô·¥Ä…¥…¥·¥á·¥Ö A ü·¥á Ä·¥õ s·¥á…¥·¥õ ·¥õ·¥è <code>{user_id}</code>\n·¥Ä ü·¥á Ä·¥õ ·¥õ·¥áx·¥õ : {unban_text}</b>")
            except Exception as e:
                await query.message.edit(f"<b>s Ä è …™ …¢·¥è·¥õ ·¥õ ú…™s ·¥á Ä Ä·¥è Ä : {e}</b>")
        else:
            await query.message.edit(f"<b>T ú·¥á ·¥ò Ä·¥è·¥Ñ·¥áss ·¥°·¥Äs …¥·¥è·¥õ ·¥Ñ·¥è·¥ç·¥ò ü·¥á·¥õ·¥á·¥Ö  ô·¥á·¥Ñ·¥Ä·¥ús·¥á ·¥õ ú·¥á ·¥ús·¥á Ä …™·¥Ö ·¥°·¥Äs …¥·¥è·¥õ ·¥†·¥Ä ü…™·¥Ö, ·¥è Ä ·¥ò·¥á Ä ú·¥Ä·¥òs …™·¥õ ·¥°·¥Äs ·¥Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü …™·¥Ö</b>")   
    elif data.startswith('NoUnbanAlert'):
        user_id =(data.split("_")[1])
        user_id = int(user_id.replace(' ' , ''))
        await query.message.edit(f"T ú·¥á ·¥ú…¥ ô·¥Ä…¥ ·¥è…¥ <code>{user_id}</code> ·¥°·¥Äs ·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á·¥Ö s…™ ü·¥á…¥·¥õ ü è.")

  # ‚î£‚™º<b>s·¥ú·¥ò·¥ò·¥è Ä·¥õ : <a href='https://t.me/DiscussGroupProblam'>Support</a></b>
